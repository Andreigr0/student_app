"""add projects

Revision ID: 85a35803a864
Revises: bc7aff840c44
Create Date: 2023-03-25 23:09:21.780428

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '85a35803a864'
down_revision = 'bc7aff840c44'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'under_recruitment', 'recruited', 'finished', 'withdrawn', name='projectstatus'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('finish_date', sa.Date(), nullable=False),
    sa.Column('type', sa.Enum('startup', 'internship', 'research', 'software', 'software_and_hardware', name='projecttype'), nullable=True),
    sa.Column('kind', sa.Enum('digital_academy', 'pish', 'gpo', name='projectkind'), nullable=True),
    sa.Column('is_only_for_digital_academy', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('solving_problems', sa.String(), nullable=False),
    sa.Column('goals', sa.String(), nullable=False),
    sa.Column('tasks', sa.String(), nullable=False),
    sa.Column('results', sa.String(), nullable=False),
    sa.Column('what_will_participant_get', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('work_load', sa.String(), nullable=False),
    sa.Column('work_format', sa.Enum('full_time', 'remote', 'flexible', name='workformat'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_stages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('finish_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects_companies',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('organizer', 'partner', name='projectcompanytype'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'company_id')
    )
    op.create_table('project_competencies',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('competency_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competencies.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'competency_id')
    )
    op.create_table('project_roles_acquired_competencies',
    sa.Column('project_role_id', sa.Integer(), nullable=False),
    sa.Column('competency_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competencies.id'], ),
    sa.ForeignKeyConstraint(['project_role_id'], ['project_roles.id'], ),
    sa.PrimaryKeyConstraint('project_role_id', 'competency_id')
    )
    op.create_table('project_roles_needed_competencies',
    sa.Column('project_role_id', sa.Integer(), nullable=False),
    sa.Column('competency_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competencies.id'], ),
    sa.ForeignKeyConstraint(['project_role_id'], ['project_roles.id'], ),
    sa.PrimaryKeyConstraint('project_role_id', 'competency_id')
    )
    op.create_table('projects_members',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('position', sa.Enum('student', 'curator', 'company', name='projectposition'), nullable=False),
    sa.Column('status', sa.Enum('accepted', 'rejected', 'refused_invitation', 'withdrawn', 'applied', name='projectteamstatus'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['project_roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('projects_members')
    op.drop_table('project_roles_needed_competencies')
    op.drop_table('project_roles_acquired_competencies')
    op.drop_table('project_competencies')
    op.drop_table('projects_companies')
    op.drop_table('project_stages')
    op.drop_table('project_roles')
    op.drop_table('projects')
    sa.Enum(name='projectteamstatus').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='projectposition').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='projectkind').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='projecttype').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='workformat').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='projectstatus').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='projectcompanytype').drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
